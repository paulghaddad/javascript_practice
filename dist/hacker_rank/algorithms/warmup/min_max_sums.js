"use strict";

function sumExceptIndex(array, index) {
    var sum = 0;

    array.forEach(function (currentValue, currentIndex, array) {
        if (index != currentIndex) {
            sum += currentValue;
        }
    });

    return sum;
}

function minMaxSums(array) {
    var sums = [];

    array.forEach(function (currentValue, currentIndex, array) {
        var sum = sumExceptIndex(array, currentIndex);

        return sums.push(sum);
    });

    var sortedSums = sums.slice().sort(function (a, b) {
        return a - b;
    });

    var max = sortedSums[sums.length - 1];
    var min = sortedSums[0];

    return [min, max];
}

var input = [1, 2, 3, 4, 5];
var minMax = minMaxSums(input);

process.stdout.write("Min: " + minMax[0] + " Max: " + minMax[1] + "\n");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9oYWNrZXJfcmFuay9hbGdvcml0aG1zL3dhcm11cC9taW5fbWF4X3N1bXMuZXM2Il0sIm5hbWVzIjpbInN1bUV4Y2VwdEluZGV4IiwiYXJyYXkiLCJpbmRleCIsInN1bSIsImZvckVhY2giLCJjdXJyZW50VmFsdWUiLCJjdXJyZW50SW5kZXgiLCJtaW5NYXhTdW1zIiwic3VtcyIsInB1c2giLCJzb3J0ZWRTdW1zIiwic2xpY2UiLCJzb3J0IiwiYSIsImIiLCJtYXgiLCJsZW5ndGgiLCJtaW4iLCJpbnB1dCIsIm1pbk1heCIsInByb2Nlc3MiLCJzdGRvdXQiLCJ3cml0ZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFTQSxjQUFULENBQXdCQyxLQUF4QixFQUErQkMsS0FBL0IsRUFBc0M7QUFDbEMsUUFBSUMsTUFBTSxDQUFWOztBQUVBRixVQUFNRyxPQUFOLENBQWMsVUFBQ0MsWUFBRCxFQUFlQyxZQUFmLEVBQTZCTCxLQUE3QixFQUF1QztBQUNqRCxZQUFJQyxTQUFTSSxZQUFiLEVBQTJCO0FBQ3ZCSCxtQkFBT0UsWUFBUDtBQUNIO0FBQ0osS0FKRDs7QUFNQSxXQUFPRixHQUFQO0FBQ0g7O0FBRUQsU0FBU0ksVUFBVCxDQUFvQk4sS0FBcEIsRUFBMkI7QUFDdkIsUUFBSU8sT0FBTyxFQUFYOztBQUVBUCxVQUFNRyxPQUFOLENBQWMsVUFBQ0MsWUFBRCxFQUFlQyxZQUFmLEVBQTZCTCxLQUE3QixFQUF1QztBQUNqRCxZQUFJRSxNQUFNSCxlQUFlQyxLQUFmLEVBQXNCSyxZQUF0QixDQUFWOztBQUVBLGVBQU9FLEtBQUtDLElBQUwsQ0FBVU4sR0FBVixDQUFQO0FBQ0gsS0FKRDs7QUFNQSxRQUFJTyxhQUFhRixLQUFLRyxLQUFMLEdBQWFDLElBQWIsQ0FBa0IsVUFBQ0MsQ0FBRCxFQUFHQyxDQUFIO0FBQUEsZUFBU0QsSUFBSUMsQ0FBYjtBQUFBLEtBQWxCLENBQWpCOztBQUVBLFFBQUlDLE1BQU1MLFdBQVdGLEtBQUtRLE1BQUwsR0FBYyxDQUF6QixDQUFWO0FBQ0EsUUFBSUMsTUFBTVAsV0FBVyxDQUFYLENBQVY7O0FBRUEsV0FBTyxDQUFDTyxHQUFELEVBQU1GLEdBQU4sQ0FBUDtBQUNIOztBQUVELElBQUlHLFFBQVEsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLEVBQVMsQ0FBVCxDQUFaO0FBQ0EsSUFBSUMsU0FBU1osV0FBV1csS0FBWCxDQUFiOztBQUVBRSxRQUFRQyxNQUFSLENBQWVDLEtBQWYsV0FBNkJILE9BQU8sQ0FBUCxDQUE3QixjQUErQ0EsT0FBTyxDQUFQLENBQS9DIiwiZmlsZSI6Im1pbl9tYXhfc3Vtcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHN1bUV4Y2VwdEluZGV4KGFycmF5LCBpbmRleCkge1xuICAgIGxldCBzdW0gPSAwO1xuXG4gICAgYXJyYXkuZm9yRWFjaCgoY3VycmVudFZhbHVlLCBjdXJyZW50SW5kZXgsIGFycmF5KSA9PiB7XG4gICAgICAgIGlmIChpbmRleCAhPSBjdXJyZW50SW5kZXgpIHtcbiAgICAgICAgICAgIHN1bSArPSBjdXJyZW50VmFsdWU7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBzdW07XG59XG5cbmZ1bmN0aW9uIG1pbk1heFN1bXMoYXJyYXkpIHtcbiAgICBsZXQgc3VtcyA9IFtdO1xuXG4gICAgYXJyYXkuZm9yRWFjaCgoY3VycmVudFZhbHVlLCBjdXJyZW50SW5kZXgsIGFycmF5KSA9PiB7XG4gICAgICAgIGxldCBzdW0gPSBzdW1FeGNlcHRJbmRleChhcnJheSwgY3VycmVudEluZGV4KTtcblxuICAgICAgICByZXR1cm4gc3Vtcy5wdXNoKHN1bSk7XG4gICAgfSk7XG5cbiAgICBsZXQgc29ydGVkU3VtcyA9IHN1bXMuc2xpY2UoKS5zb3J0KChhLGIpID0+IGEgLSBiICk7XG5cbiAgICBsZXQgbWF4ID0gc29ydGVkU3Vtc1tzdW1zLmxlbmd0aCAtIDFdO1xuICAgIGxldCBtaW4gPSBzb3J0ZWRTdW1zWzBdO1xuXG4gICAgcmV0dXJuIFttaW4sIG1heF07XG59XG5cbmxldCBpbnB1dCA9IFsxLDIsMyw0LDVdO1xubGV0IG1pbk1heCA9IG1pbk1heFN1bXMoaW5wdXQpO1xuXG5wcm9jZXNzLnN0ZG91dC53cml0ZShgTWluOiAke21pbk1heFswXX0gTWF4OiAke21pbk1heFsxXX1cXG5gKTtcbiJdfQ==